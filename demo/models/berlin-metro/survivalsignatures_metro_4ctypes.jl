using SurvivalSignature
using JLD2

## Subsystem 1
A1 = zeros(4, 4)
A1[1, [4]] .= 1.0

types1 = Dict(1 => [4], 2 => [3], 3 => [2], 4 => [1])

φ = SurvivalSignature.s_t_connectivity([1:4;], [1:3;], [2:4;])
Φ₁ = survivalsignature(A1, types1, φ)

## Subsystem 2
A2 = zeros(8, 8)
A2[1, [5]] .= 1.0
A2[2, [5]] .= 1.0
A2[3, [5]] .= 1.0
A2[4, [6]] .= 1.0
A2[4, [7]] .= 1.0
A2[5, [8]] .= 1.0

types2 = Dict(1 => [4, 5], 2 => [1, 6], 3 => [2, 8], 4 => [3, 7])

φ = SurvivalSignature.s_t_connectivity([1:8;], [1:4;], [6:8;])
Φ₂ = survivalsignature(A2, types2, φ)

## Subsystem 3
A3 = zeros(12, 12)
A3[1, [6]] .= 1.0
A3[2, [7, 8]] .= 1.0
A3[3, [7, 8]] .= 1.0
A3[4, [7, 8]] .= 1.0
A3[5, [7, 8]] .= 1.0
A3[6, [7, 8]] .= 1.0
A3[7, [9]] .= 1.0
A3[8, [9]] .= 1.0
A3[9, [10, 11, 12]] .= 1.0

types3 = Dict(1 => [2, 7, 10], 2 => [1, 4, 9], 3 => [3, 8, 12], 4 => [5, 6, 11])

φ = SurvivalSignature.s_t_connectivity([1:12;], [1:5;], [10:12;])
Φ₃ = survivalsignature(A3, types3, φ)

## Subsystem 4
A4 = zeros(16, 16)
A4[1, [2, 3, 4]] .= 1.0
A4[2, [8, 11, 14]] .= 1.0
A4[3, [8, 11, 14]] .= 1.0
A4[4, [8, 11, 14]] .= 1.0
A4[5, [7]] .= 1.0
A4[6, [9, 10]] .= 1.0
A4[7, [12]] .= 1.0
A4[8, [13]] .= 1.0
A4[11, [15]] .= 1.0
A4[13, [16]] .= 1.0

types4 = Dict(
    1 => [2, 9, 11, 15], 2 => [3, 6, 12, 13], 3 => [4, 5, 8, 16], 4 => [1, 7, 10, 14]
)

φ = SurvivalSignature.s_t_connectivity([1:16;], [1, 5, 6], [9, 10, 12, 14, 15, 16])
Φ₄ = survivalsignature(A4, types4, φ)

## Subsystem 5
A5 = zeros(17, 17)
A5[1, [2, 3, 4, 6, 7]] .= 1.0
A5[2, [5, 8, 9]] .= 1.0
A5[3, [11, 12]] .= 1.0
A5[4, [11, 12]] .= 1.0
A5[5, [10]] .= 1.0
A5[6, [13, 14]] .= 1.0
A5[7, [15, 16]] .= 1.0
A5[8, [17]] .= 1.0
A5[9, [17]] .= 1.0
A5[10, [17]] .= 1.0
A5[11, [13, 14]] .= 1.0
A5[12, [13, 14]] .= 1.0
A5[12, [13, 14]] .= 1.0

types5 = Dict(
    1 => [3, 6, 7, 17], 2 => [1, 10], 3 => [4, 9, 5, 11, 14, 15], 4 => [2, 8, 12, 13, 16]
)

φ = SurvivalSignature.s_t_connectivity([1:17;], [1], [13:17;])
Φ₅ = survivalsignature(A5, types5, φ)

## Subsystem 6
A6 = zeros(21, 21)
A6[1, [6, 7]] .= 1.0
A6[2, [4, 5, 8]] .= 1.0
A6[3, [4, 5, 8]] .= 1.0
A6[4, [6, 7]] .= 1.0
A6[5, [6, 7]] .= 1.0
A6[6, [9:13;]] .= 1.0
A6[7, [9:13;]] .= 1.0
A6[8, [9:13;]] .= 1.0
A6[9, [14:16;]] .= 1.0
A6[10, [14:16;]] .= 1.0
A6[11, [17]] .= 1.0
A6[12, [17]] .= 1.0
A6[13, [18, 19]] .= 1.0
A6[14, [20, 21]] .= 1.0
A6[15, [20, 21]] .= 1.0
A6[16, [20, 21]] .= 1.0
A6[17, [20, 21]] .= 1.0
A6[18, [20, 21]] .= 1.0
A6[19, [20, 21]] .= 1.0

types6 = Dict(
    1 => [1, 8, 15, 19, 20],
    2 => [2, 4, 12, 14, 16, 21],
    3 => [5, 6, 9, 11, 18],
    4 => [3, 7, 10, 13, 17],
)

φ = SurvivalSignature.s_t_connectivity([1:21;], [1:3;], [20, 21])
Φ₆ = survivalsignature(A6, types6, φ)

jldsave("demo/data/berlin-metro-subsystems.jld2"; Φ₁, Φ₂, Φ₃, Φ₄, Φ₅, Φ₆)
